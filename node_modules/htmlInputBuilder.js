var InputIterationBuilder = function(model) {
    var dimensionTable = document.getElementById("pieceSize").getElementsByTagName('tbody')[0];
    var offsetsTable = document.getElementById("specs").getElementsByTagName('tbody')[0];

    for(var i = 0; i < model.nodeDataArray.length; i++){
        var newRow = dimensionTable.insertRow(dimensionTable.rows.length);

        RowIterator(newRow, model.nodeDataArray[i]);        

        if(i > 0){
            var newOffsetRow = offsetsTable.insertRow(offsetsTable.rows.length);
            
            RowIterator(newOffsetRow, model.nodeDataArray[i], model.nodeDataArray[i-1].key);
        }
    }
}

var RowIterator = function(element, rowToAdd, previousKey){
    var newText = "";
    for(var y = 0; y < 3; y++){
        var newCell = element.insertCell(y);
        if(y == 0){
            newText = previousKey == "" || previousKey == null ? document.createTextNode(rowToAdd.key) : 
            document.createTextNode(previousKey + "-" + rowToAdd.key);
        }
        else if (y==1) {
            newText = document.createElement("input");
            newText.id = previousKey == "" || previousKey == null ? "width" + (y+1) : "frontOffset" + (y+1);
            newText.value = previousKey == "" || previousKey == null || previousKey == null ? rowToAdd.width * 20 : rowToAdd.frontOffset * 20;
        }
        else {
            newText = document.createElement("input");
            newText.id = previousKey == "" || previousKey == null ? "height" + (y+1) : "backOffset" + (y+1);
            newText.value = previousKey == "" || previousKey == null ? rowToAdd.height * 20 : rowToAdd.backOffset * 20;
        }
        newCell.appendChild(newText);
    }
}